---
- name: Caricare variabili cifrate
  include_vars: "../../../vault.yml"

- name: Verificare se Docker è installato
  command: which docker
  register: docker_check
  ignore_errors: yes

- name: Verificare se Podman è installato
  command: which podman
  register: podman_check
  ignore_errors: yes

- name: Imposta il motore dei container
  set_fact:
    container_engine: >
      {% if docker_check.rc == 0 %} docker
      {% elif podman_check.rc == 0 %} podman
      {% else %} none {% endif %}

- name: Normalizza il valore di container_engine
  set_fact:
    container_engine: "{{ container_engine | trim }}"

- name: Debug container_engine
  debug:
    msg: "Il motore selezionato è: {{ container_engine }}"

- name: Fallire se nessun motore di container è disponibile
  fail:
    msg: "Né Docker né Podman sono installati!"
  when: container_engine == "none"

- name: Login al registry locale con Docker
  command: >
    echo "{{ docker_registry_password }}" | docker login localhost:5000 -u {{ docker_registry_user }} --password-stdin
  when: container_engine == "docker"

- name: Verifica login al registry Docker
  command: echo "{{ docker_registry_password }}" | docker login localhost:5000 -u {{ docker_registry_user }} --password-stdin
  when: container_engine == "docker"
  register: docker_login
  failed_when: docker_login.rc != 0
  ignore_errors: no

- name: Debug login Docker
  debug:
    msg: "Output del login Docker: {{ docker_login.stdout }}"
  when: docker_login.rc != 0

# Taggare immagine Ubuntu per il registry locale con Docker
- name: Taggare immagine Ubuntu per il registry locale con Docker
  command: docker tag ubuntu-ssh-container:latest localhost:5000/ubuntu-ssh-container:latest
  when: container_engine == "docker"

# Taggare immagine Rocky Linux per il registry locale con Docker
- name: Taggare immagine Rocky Linux per il registry locale con Docker
  command: docker tag rockylinux-ssh-container:latest localhost:5000/rockylinux-ssh-container:latest
  when: container_engine == "docker"

# Push immagine Ubuntu nel registry locale con Docker
- name: Push immagine Ubuntu nel registry locale con Docker
  command: docker push localhost:5000/ubuntu-ssh-container:latest
  when: container_engine == "docker"

# Push immagine Rocky Linux nel registry locale con Docker
- name: Push immagine Rocky Linux nel registry locale con Docker
  command: docker push localhost:5000/rockylinux-ssh-container:latest
  when: container_engine == "docker"

# Taggare immagine Ubuntu per il registry locale con Podman
- name: Taggare immagine Ubuntu per il registry locale con Podman
  command: podman tag ubuntu-ssh-container:latest localhost:5000/ubuntu-ssh-container:latest
  args:
    warn: false
  when: container_engine == "podman"

# Taggare immagine Rocky Linux per il registry locale con Podman
- name: Taggare immagine Rocky Linux per il registry locale con Podman
  command: podman tag rockylinux-ssh-container:latest localhost:5000/rockylinux-ssh-container:latest
  args:
    warn: false
  when: container_engine == "podman"

# Push immagine Ubuntu nel registry locale con Podman
- name: Push immagine Ubuntu nel registry locale con Podman
  command: podman push localhost:5000/ubuntu-ssh-container:latest
  args:
    warn: false
  when: container_engine == "podman"

# Push immagine Rocky Linux nel registry locale con Podman
- name: Push immagine Rocky Linux nel registry locale con Podman
  command: podman push localhost:5000/rockylinux-ssh-container:latest
  args:
    warn: false
  when: container_engine == "podman"
